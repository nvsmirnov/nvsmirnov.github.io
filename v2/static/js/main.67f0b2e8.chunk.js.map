{"version":3,"sources":["Api.js","AuthForm.js","TrustCard.js","App.js","index.js"],"names":["CLIENT_ID","CLIENT_SECRET","YandexMusicApi","passport_url","auth_sdk_params","generate_token_by_login_and_password","login","password","track_id","captcha_answer","start_authentication","send_authentication_password","x_token","captcha_image_url","Captcha","generate_yandex_music_token_by_x_token","url","data","post","res","status","BadRequest","errors","join","includes","access_token","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","fetch","method","headers","body","resp","json","Error","AuthForm","props","api","mirror","handleChange","target","name","value","setState","state","handleSubmit","event","preventDefault","captcha_image","undefined","error","then","token","window","location","href","catch","this","Button","variant","block","className","Form","Group","controlId","Label","column","Control","onChange","type","placeholder","Row","Col","Image","fluid","src","onClick","React","Component","TrustCard","Card","Header","size","icon","Body","Title","title","Text","text","defaultProps","App","Container","width","roundedCircle","CardDeck","library","add","fab","far","fas","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67f0b2e8.chunk.js","sourcesContent":["/**\n * Reference: https://github.com/MarshalX/yandex-music-api/blob/1fc342183ba59e4d1c47b6d8ae5ac6afe46d6a14/yandex_music/client.py#L173\n */\n\nconst CLIENT_ID = '23cabbbdc6cd418abb4b39c32c41195d';\nconst CLIENT_SECRET = '53bc75238f0c4d08a118e51fe9203300';\nconst X_TOKEN_CLIENT_ID = 'c0ebe342af7d48fbbbfcf2d2eedb8f9e';\nconst X_TOKEN_CLIENT_SECRET = 'ad0a908f0aa341a182a37ecd75bc319e';\n\nclass YandexMusicApi {\n    passport_url = 'https://mobileproxy.passport.yandex.net';\n    auth_sdk_params = 'app_id=ru.yandex.mobile.music&app_version_name=5.18&app_platform=iPad'\n\n    generate_token_by_login_and_password = async (login, password, track_id, captcha_answer) => {\n        if (!track_id) {\n            track_id = await this.start_authentication(login);\n        }\n\n        let x_token;\n        try {\n            x_token = await this.send_authentication_password(track_id, password, captcha_answer);\n        } catch (e) {\n            if (!e.captcha_image_url) {\n                throw e;\n            } else {\n                throw new Captcha({\n                    captcha_image_url: e.captcha_image_url,\n                    track_id: track_id,\n                });\n            }\n        }\n\n        return await this.generate_yandex_music_token_by_x_token(x_token);\n    };\n\n    start_authentication = async login => {\n        const url = `${this.passport_url}/2/bundle/mobile/start`;\n\n        const data = {\n            'client_id': CLIENT_ID,\n            'client_secret': CLIENT_SECRET,\n            'login': login,\n            'x_token_client_id': X_TOKEN_CLIENT_ID,\n            'x_token_client_secret': X_TOKEN_CLIENT_SECRET,\n            'display_language': 'ru',\n        };\n\n        const res = await this.post(url, data);\n        if (!res.status || res.status === 'error') {\n            throw new BadRequest(res.errors.join('\\n'));\n        }\n\n        return res.track_id;\n    };\n\n    send_authentication_password = async (track_id, password, captcha_answer) => {\n        const url = `${this.passport_url}/1/bundle/mobile/auth/password`;\n\n        const data = {\n            'track_id': track_id,\n            'password': password,\n        }\n\n        if (captcha_answer) {\n            data.captcha_answer = captcha_answer;\n        }\n\n        const res = await this.post(url, data);\n\n        const status = res.status || 'error';\n        if (status === 'ok') {\n            return res.x_token;\n        }\n\n        if (res.errors.includes('password.not_matched')) {\n            throw new BadRequest('Неправильный пароль');\n        } else if (res.errors.includes('captcha.required')) {\n            throw new Captcha({\n                captcha_image_url: res.captcha_image_url,\n                track_id: track_id,\n            });\n        } else if (res.errors.includes('captcha.not_shown')) {\n            throw new BadRequest('Капча не была отображена');\n        } else {\n            throw new BadRequest(res.errors.join('\\n'));\n        }\n    }\n\n    generate_yandex_music_token_by_x_token = async x_token => {\n        const url = `${this.passport_url}/1/token/?${this.auth_sdk_params}`\n\n        const data = {\n            'access_token': x_token,\n            'client_id': CLIENT_ID,\n            'client_secret': CLIENT_SECRET,\n            'grant_type': 'x-token',\n        }\n\n        const res = await this.post(url, data);\n\n        if (res.access_token) {\n            return res.access_token;\n        }\n\n        throw new BadRequest(res.errors.join('\\n'));\n    }\n\n    serialize = (obj) => {\n        let str = [];\n        for (let p in obj)\n            if (obj.hasOwnProperty(p)) {\n                str.push(`${encodeURIComponent(p)}=${encodeURIComponent(obj[p])}`);\n            }\n        return str.join('&');\n    };\n\n    post = async (url, data) => {\n        const resp = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: this.serialize(data),\n        })\n        return resp.json();\n    };\n}\n\nclass Captcha extends Error {\n    constructor(body) {\n        super();\n        this.body = body\n    }\n}\n\nclass BadRequest extends Error{\n    constructor(body) {\n        super();\n        this.body = body;\n    }\n}\n\nexport { YandexMusicApi };\nexport { Captcha };\nexport { BadRequest };\n","import { Button, Col, Form, Image, Row } from 'react-bootstrap';\nimport React from 'react';\nimport { Captcha, YandexMusicApi } from './Api';\n\n\nclass AuthForm extends React.Component {\n    api = new YandexMusicApi();\n    mirror = 'https://t.me/';\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            track_id: null,\n            login: '',\n            password: '',\n            error: null,\n            token: null\n        };\n    }\n\n    handleChange = ({target: {name, value}}) => {\n        this.setState({...this.state, [name]: value, error: null})\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        this.setState({\n            ...this.state,\n            captcha_image: undefined,\n        });\n\n        const {track_id, login, password, captcha_answer} = this.state;\n\n        if (!login || !password) {\n            return this.setState({\n                ...this.state,\n                error: 'Вы забыли ввести логин или пароль',\n            })\n        }\n\n        this.api.generate_token_by_login_and_password(login, password, track_id, captcha_answer).then(token => {\n            window.location.href = `tg://resolve?domain=music_yandex_bot&start=${token}`;\n            this.setState({...this.state, token: token})\n        }).catch(error => {\n            if (error instanceof Captcha) {\n                const {captcha_image_url, track_id} = error.body;\n                this.setState({\n                    ...this.state,\n                    captcha_image_url: captcha_image_url,\n                    track_id: track_id,\n                    error: 'Необходимо пройти капчу',\n                })\n            } else {\n                this.setState({\n                    ...this.state,\n                    error: error.body,\n                });\n            }\n        })\n    };\n\n    render() {\n        const {captcha_image_url, error, token} = this.state;\n        return token ? (\n            <>\n                <a href={`-`}>\n                    <Button variant=\"primary\" block>\n                        Токен: ${token}\n                    </Button>\n                </a>\n                <small className=\"text-muted \">Если кнопка не работает -\n                    <a href={`${this.mirror}music_yandex_bot?start=${token}`}> перейдите по ссылке</a>\n                </small>\n            </>\n        ) : (\n            <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label column={false}>Введите логин, почту или телефон:</Form.Label>\n                    <Form.Control name=\"login\" onChange={this.handleChange}\n                                  type=\"email\" placeholder=\"Введите логин, почту или телефон\"/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label column={false}>Введите пароль</Form.Label>\n                    <Form.Control name=\"password\" onChange={this.handleChange}\n                                  type=\"password\" placeholder=\"Введите пароль\"/>\n                </Form.Group>\n\n                {captcha_image_url &&\n                <Form.Group controlId=\"formBasicCaptcha\">\n                    <Row className=\"mb-2\">\n                        <Col><Image fluid src={captcha_image_url}/></Col>\n                        <Col className=\"align-self-center\">\n                            <Button className=\"btn-block\" type=\"submit\" onClick={this.handleSubmit}>\n                                Обновить\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Control name=\"captcha_answer\" onChange={this.handleChange}\n                                          type=\"text\" placeholder=\"Введите код с картинки\"/>\n                        </Col>\n                    </Row>\n                </Form.Group>\n                }\n\n                <Button variant=\"primary\" type=\"submit\" block onClick={this.handleSubmit}>\n                    Войти\n                </Button>\n\n                {error &&\n                <p className=\"mt-1 text-danger\">{`${error}`}</p>\n                }\n            </Form>\n        );\n    }\n}\n\nexport default AuthForm;\n","import {Card} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nclass TrustCard extends React.Component {\n    render() {\n        return (\n            <Card className=\"mb-4\">\n                <Card.Header className=\"text-center\">\n                    <FontAwesomeIcon size={this.props.size} icon={this.props.icon} />\n                </Card.Header>\n\n                <Card.Body>\n                    <Card.Title>{this.props.title}</Card.Title>\n                    <Card.Text>{this.props.text}</Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nTrustCard.defaultProps = {\n    size: '7x'\n};\n\nexport default TrustCard;\n","import React, {Component} from 'react';\nimport {Badge, CardDeck, Col, Container, Image, Row} from 'react-bootstrap'\nimport AuthForm from \"./AuthForm\";\nimport TrustCard from \"./TrustCard\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Container>\n                <Row className=\"mt-5\">\n                    <Col className=\"d-none d-xl-block col-md-3\"/>\n                    <Col>\n                        <Row>\n                            <Container>\n                                <h4>Яндекс.Музыка - аутентификация</h4>\n                            </Container>\n                        </Row>\n                        <Row>\n                            <Container>\n                                <Image src=\"logo.png\" width=\"100%\" roundedCircle/>\n                            </Container>\n                        </Row>\n                        <Row>\n                            <Container>\n                                <p>\n                                    Эта стриница нужна для того, чтобы вы могли авторизоваться в Яндекс.Музыке без передачи\n                                    вашего логина и пароля куда либо (в том числе на эту страницу)\n                                </p>\n                                <p>\n                                    Использует ПО с открытым исходным кодом (ссылки ниже)\n                                </p>\n                            </Container>\n                        </Row>\n                    </Col>\n                    <Col className=\"d-none d-xl-block col-md-3\"/>\n                </Row>\n                <Row>\n                    <Col className=\"d-none d-xl-block col-md-3\"/>\n                    <Col>\n                        <AuthForm/>\n                    </Col>\n                    <Col className=\"d-none d-xl-block col-md-3\"/>\n                </Row>\n                <Row className=\"mt-5\">\n                    <Container className=\"justify-content-center \">\n                        <h2 className=\"text-center mb-3\">Причины, по которым нам стоит доверять</h2>\n                        <Row>\n                            <CardDeck>\n                                <TrustCard icon={['fab', 'yandex']} title=\"Напрямую в Яндекс!\"\n                                           text=\"Ваш логин и пароль отправляется с Вашего компьютера сразу на сервера\n                                           Яндекса без каких-либо посредников.\"/>\n                                <TrustCard icon={['fab', 'expeditedssl']} title=\"Используем безопасное соединение!\"\n                                           text=\"Все ваши данные отправляются в зашифрованном виде через протокол HTTPS.\"/>\n                                <TrustCard icon=\"key\" title=\"Не храним ваши пароли!\"\n                                           text=\"На наших серверах хранится только Ваш уникальный токен,\n                                           полученный при авторизации.\"/>\n                            </CardDeck>\n                            <CardDeck>\n                                <TrustCard icon=\"code\" title=\"Открытый исходный код!\"\n                                           text=\"Весь исходный код опубликован в репозитории на GitHub и доступен для\n                                            просмотра.\"/>\n                                <TrustCard icon=\"shield-alt\" title=\"Только официальное приложение!\"\n                                           text=\"Авторизация происходит через OAuth приложение Яндекса используемое в их\n                                           клиентах.\"/>\n                                <TrustCard icon=\"spinner\" title=\"Выполнение в браузере!\"\n                                           text=\"Весь код выполняется в Вашем браузере без возможности вмешательства с\n                                           чьей-либо стороны.\"/>\n                            </CardDeck>\n                        </Row>\n                    </Container>\n                </Row>\n                <hr/>\n                <Row className=\"mb-3\">\n                    <Container>\n                        <Row className=\"d-flex justify-content-between\">\n                            <Col>\n                                <span>Исходный код: <a\n                                    href=\"https://github.com/MarshalX/yandex-music-token\">yandex-music-token</a></span>\n                            </Col>\n                            <Col className=\"text-right\">\n                                <span> Автор: <a href=\"tg://resolve?domain=MarshalX\">@MarshalX</a></span>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, far, fas);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}